name: Mirror to CSDE GitLab
on:
  workflow_dispatch:   # ✅ allows manual runs
  push:
    branches: ["**"]
    tags: ["**"]

jobs:
  mirror:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Put the full CA chain (intermediate(s) + root) in secret CSDE_CA_PEM.
      # If your export also included the leaf (CN=csde.nswc.navy.mil), this step drops it.
      - name: Install CSDE CA for Git
        env:
          CSDE_CA_PEM: ${{ secrets.CSDE_CA_PEM }}
        run: |
          # Write the provided PEM bundle
          printf "%s" "$CSDE_CA_PEM" > ca-all.pem

          # Split into individual files part-1.pem, part-2.pem, ...
          awk 'BEGIN{n=0} /BEGIN CERTIFICATE/{n++} {print > ("part-" n ".pem")}' ca-all.pem

          # Build a cleaned CA bundle (exclude the leaf cert with CN=csde.nswc.navy.mil)
          : > csde-ca.pem
          for f in part-*.pem; do
            sub=$(openssl x509 -noout -subject -in "$f" || true)
            iss=$(openssl x509 -noout -issuer  -in "$f" || true)
            echo "----- $f -----"
            echo "$sub"
            echo "$iss"
            if echo "$sub" | grep -qi "CN *= *csde\.nswc\.navy\.mil"; then
              echo "Skipping leaf/server cert: $f"
            else
              cat "$f" >> csde-ca.pem
            fi
          done

          # Tell git to trust this CA bundle for your GitLab host (fixed closing quote)
          git config --global http."https://gitlab.csde.nswc.navy.mil/".sslCAInfo "$PWD/csde-ca.pem"

      - name: Test TLS to CSDE GitLab with CA bundle
        run: |
          curl --head --silent --show-error --cacert csde-ca.pem https://gitlab.csde.nswc.navy.mil/ >/dev/null
          echo "TLS verification to CSDE GitLab succeeded."

      - name: Push branches and tags to CSDE
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
        run: |
          set -euo pipefail

          # 0) Remotes
          git remote remove gitlab 2>/dev/null || true
          git remote add gitlab "https://oauth2:${GITLAB_TOKEN}@gitlab.csde.nswc.navy.mil/caymran.c.cummings.civ/av_ocr_suite.git"

          # 1) Make sure we have full refs from GitHub (origin)
          #    - all branches into refs/remotes/origin/*
          #    - all tags
          git fetch --prune origin \
            '+refs/heads/*:refs/remotes/origin/*' \
            '+refs/tags/*:refs/tags/*'

          # 2) Ensure 'main' local branch tracks origin/main and push it first (non-destructive)
          git checkout -B main origin/main
          git push gitlab main

          # 3) Push feature branches: iterate over origin’s remote-tracking branches (excluding main)
          for rbr in $(git for-each-ref --format='%(refname:strip=3)' refs/remotes/origin/ | grep -v '^main$'); do
            # Create/update a matching local branch to push, or push directly from the remote-tracking ref
            git push gitlab "refs/remotes/origin/${rbr}:refs/heads/${rbr}"
          done

          # 4) Push all tags
          git push gitlab --tags

