name: Windows Build

on:
  push:
    branches: [ main ]
    tags: ["v*.*.*"]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Cache faster-whisper base.en
        uses: actions/cache@v4
        with:
          path: models/base.en
          key: fasterwhisper-base-en-${{ runner.os }}-v1

      - name: Pre-download faster-whisper model (base.en)
        if: steps.cache.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          python - << 'PY'
          from pathlib import Path
          Path("models").mkdir(parents=True, exist_ok=True)
          # Trigger a download into ./models using faster-whisper itself
          from faster_whisper import WhisperModel
          WhisperModel("base.en", device="cpu", compute_type="int8", download_root="models")
          print("Model downloaded to models/base.en")
          PY

      - name: Build EXE
        run: |
          pyinstaller --clean -y AV_OCR_Suite.spec
          dir dist\AV_OCR_Suite

      # ðŸ”½ Replace the broken action with Chocolatey + ISCC
      - name: Install Inno Setup
        shell: pwsh
        run: choco install innosetup --yes --no-progress

      - name: Build installer
        shell: pwsh
        run: |
          $iscc = "C:\Program Files (x86)\Inno Setup 6\ISCC.exe"
          & "$iscc" "installer\AV_OCR_Suite.iss"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: AV_OCR_Suite-build
          path: |
            dist/AV_OCR_Suite/**
            Output/**   # InnoSetup default output folder
